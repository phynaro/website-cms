# Docker Environment Variables Template
# Copy this file to .env and fill in your actual values

# Backend Configuration
NODE_ENV=production
SESSION_SECRET=your-super-secure-session-secret-key-here-change-this
FRONTEND_URL=https://trazor.cloud

# Google OAuth Configuration
GOOGLE_CLIENT_ID=264403093552-bj0div99l15ne1flmoeb9r1sb9ejme0b.apps.googleusercontent.com
GOOGLE_CLIENT_SECRET=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
GOOGLE_CALLBACK_URL=https://trazor.cloud/auth/google/callback

# Google Analytics Configuration
GA_PROPERTY_ID=327097599
# Choose ONE of the following options for Google Analytics credentials:
# Option 1: Store entire JSON as environment variable (most secure for Docker)
GOOGLE_ANALYTICS_CREDENTIALS='{"type":"service_account","project_id":"firstlytech","private_key_id":"YOUR_NEW_PRIVATE_KEY_ID","private_key":"-----BEGIN PRIVATE KEY-----\nYOUR_NEW_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n","client_email":"analytic@firstlytech.iam.gserviceaccount.com","client_id":"116725801477508397596","auth_uri":"https://accounts.google.com/o/oauth2/auth","token_uri":"https://oauth2.googleapis.com/token","auth_provider_x509_cert_url":"https://www.googleapis.com/oauth2/v1/certs","client_x509_cert_url":"https://www.googleapis.com/robot/v1/metadata/x509/analytic%40firstlytech.iam.gserviceaccount.com","universe_domain":"googleapis.com"}'
# Option 2: Store file path (alternative - requires volume mounting)
# GOOGLE_ANALYTICS_CREDENTIALS_PATH=/app/credentials/analytics-credentials.json

# Admin Access Control
ALLOWED_ADMIN_EMAILS=phynaro@gmail.com

# Frontend Configuration
VITE_API_URL=https://trazor.cloud
VITE_GA_TRACKING_ID=G-E89TCL8D1P

# Let's Encrypt Configuration
CERTBOT_EMAIL=phynaro@gmail.com

# File Upload Settings
MAX_FILE_SIZE=10485760
ALLOWED_FILE_TYPES=image/jpeg,image/png,image/webp,image/gif

# Docker-specific notes:
# 1. The GOOGLE_ANALYTICS_CREDENTIALS should contain the entire JSON as a single line
# 2. Make sure to escape quotes properly in the JSON
# 3. For local development, you can use docker-compose.local.yml which uses env_file
# 4. For production, use docker-compose.yml which explicitly sets environment variables
